// npx prisma init --datasource-provider postgresql
// npx prisma db pull
// npx prisma generate

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model schema_migrations {
  version BigInt  @id
  dirty   Boolean
}

model sessions {
  id            String   @id @db.Uuid
  username      String   @db.VarChar
  refresh_token String   @db.VarChar
  user_agent    String   @db.VarChar
  client_ip     String   @db.VarChar
  is_blocked    Boolean
  expires_at    DateTime @db.Timestamptz(6)
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  users         users    @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction)

  @@index([username])
  @@index([username], map: "sessions_username_idx1")
}

model tokens {
  id        BigInt @id @default(autoincrement())
  username  String @db.VarChar
  address   String @unique @db.VarChar
  name      String @db.VarChar
  symbol    String @db.VarChar
  amount    String @db.VarChar
  owner     String @db.VarChar
  authority String @db.VarChar
  users     users  @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction)

  @@index([address])
}

model transactions {
  id           BigInt   @id @default(autoincrement())
  username     String   @db.VarChar
  context      String   @db.VarChar
  payload      Json
  is_confirmed Boolean  @default(false)
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  users        users    @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  username            String         @id @db.VarChar
  hashed_password     String         @db.VarChar
  full_name           String         @db.VarChar
  email               String         @unique @db.VarChar
  wallet_address      String         @db.VarChar
  password_changed_at DateTime       @default(dbgenerated("'0001-01-01 00:00:00+00'::timestamp with time zone")) @db.Timestamptz(6)
  created_at          DateTime       @default(now()) @db.Timestamptz(6)
  sessions            sessions[]
  tokens              tokens[]
  transactions        transactions[]
}
